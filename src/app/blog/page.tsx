import { getAllPosts, type PostMeta } from '@/lib/posts';
import { PostCard } from '@/components/PostCard';
import type { Metadata } from 'next';
import Image from 'next/image';
import { Button } from '@/components/ui/button';
import Link from 'next/link';

export const metadata: Metadata = {
  title: 'Blog',
  description: 'Browse all AI-generated articles on AutoBlog AI.',
};

// Simple pagination (can be expanded later)
const POSTS_PER_PAGE = 9;

export default async function BlogIndexPage({
  searchParams,
}: {
  searchParams?: { page?: string };
}) {
  const allPosts = getAllPosts();
  const currentPage = Number(searchParams?.page) || 1;
  const paginatedPosts = allPosts.slice(
    (currentPage - 1) * POSTS_PER_PAGE,
    currentPage * POSTS_PER_PAGE
  );
  const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

  if (allPosts.length === 0) {
    return (
      <div className="text-center py-12">
        <Image 
            src="https://placehold.co/400x300.png" 
            alt="Empty blog illustration" 
            width={200} 
            height={150} 
            className="mx-auto mb-6 rounded-md"
            data-ai-hint="empty state"
        />
        <h1 className="text-3xl font-bold tracking-tight text-foreground mb-4">Our Blog is Taking Shape!</h1>
        <p className="text-muted-foreground mb-6 max-w-md mx-auto">
          We're busy crafting amazing content. In the meantime, why not generate a new post?
        </p>
        <Button asChild>
          <Link href="/generate">Create a New Post</Link>
        </Button>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      <header className="text-center">
        <h1 className="text-4xl font-extrabold tracking-tight text-foreground sm:text-5xl">
          Latest Articles
        </h1>
        <p className="mt-4 text-xl text-muted-foreground">
          Explore insights and stories, freshly generated by AI.
        </p>
      </header>
      
      <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {paginatedPosts.map((post) => (
          <PostCard key={post.slug} post={post} />
        ))}
      </div>

      {totalPages > 1 && (
        <div className="flex justify-center items-center space-x-4 pt-8">
          {currentPage > 1 && (
            <Button variant="outline" asChild>
              <Link href={`/blog?page=${currentPage - 1}`}>Previous</Link>
            </Button>
          )}
          <span className="text-sm text-muted-foreground">
            Page {currentPage} of {totalPages}
          </span>
          {currentPage < totalPages && (
            <Button variant="outline" asChild>
              <Link href={`/blog?page=${currentPage + 1}`}>Next</Link>
            </Button>
          )}
        </div>
      )}
    </div>
  );
}
